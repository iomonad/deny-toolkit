#!/usr/bin/python3
#
# (c) iomonad - <iomonad@riseup.net>
# See: github.com/iomonad/deny-toolkit
#

import cv2
import argparse

# Key combinaison set
combinaison_set = []

ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required=True, help="Path to the key image")
ap.add_argument("-o", "--output", required=True, help="Path of produced combinaison")
args = vars(ap.parse_args())

def update_selection():
    for point1, point2 in zip(combinaison_set, combinaison_set[1:]):
        cv2.line(image, point1, point2, [0, 255, 0], 2)
    cv2.imshow("image", image)

def collect(ev, x, y, flags, param):
    if ev == cv2.EVENT_LBUTTONUP:
        combinaison_set.append((x, y))
        update_selection()
    elif ev == cv2.EVENT_LBUTTONUP:
        update_selection()

cv2.namedWindow("image")
image = cv2.imread(args["image"])
clone = image.copy()
cv2.setMouseCallback("image", collect)

if __name__ == '__main__':
    while True:
        cv2.imshow("image", image)
        key = cv2.waitKey(1) & 0xFF
        if key == ord("q"):
            break
        elif key == ord("r"):
            image = cv2.rotate(image, cv2.cv2.ROTATE_90_CLOCKWISE)
        elif key == ord("p"):
            combinaison_set.pop(-1)
            update_selection()

cv2.destroyAllWindows()
